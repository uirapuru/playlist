imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }

# Put parameters here that don't need to change on each machine where the app is deployed
# http://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: en

framework:
    #esi:             ~
    translator:      { fallbacks: ["pl"] }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    #serializer:      { enable_annotations: true }
    templating:
        engines: ['twig']
        #assets_version: SomeVersionScheme
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        # handler_id set to null will use default session handler from php.ini
        handler_id:  ~
    fragments:       ~
    http_method_override: true

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"

# Assetic Configuration
assetic:
    debug:          "%kernel.debug%"
    use_controller: false
    bundles:        [ ]
    #java: /usr/bin/java
    filters:
        cssrewrite: ~
        #closure:
        #    jar: "%kernel.root_dir%/Resources/java/compiler.jar"
        #yui_css:
        #    jar: "%kernel.root_dir%/Resources/java/yuicompressor-2.4.7.jar"

# Doctrine Configuration
doctrine:
    dbal:
        driver:   pdo_mysql
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: "%kernel.root_dir%/data/data.db3"
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #     path:     "%database_path%"

    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true

# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:     { type: memory }

sonata_core:
    form_type: horizontal

sonata_block:
    default_contexts: [cms]
    blocks:
        sonata.block.service.text: ~
        sonata.block.service.rss: ~
        sonata.admin.block.admin_list:
            contexts: [admin]

sonata_admin:
    title:                Rosomak Admin
    title_logo:           bundles/app/img/bg.png

sensio_framework_extra:
    request:
        converters: true
        auto_convert: false

services:
    admin.playlist:
        class: AppBundle\Admin\PlaylistAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, group: Rosomak, label: Playlisty }
        arguments:
            - ~
            - AppBundle\Entity\Playlist
            - ~
#            - AppBundle:CRUD

    admin.song:
        class: AppBundle\Admin\SongAdmin
        arguments: [~, AppBundle\Entity\Song, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: Rosomak, label: Piosenki }

    app.form_type.playlist:
        class: AppBundle\Form\PlaylistType
        tags:
            - { name: form.type, alias: 'playlist_form'}

    app.title_provider:
        class: AppBundle\Service\TitleProvider
        arguments:
            - @app.guzzle_client.youtube

    app.listener.song_title:
        class: AppBundle\Listener\CreateSongTitleOnPersist
        arguments:
            - @app.title_provider
        tags:
         - { name: doctrine.event_listener, event: prePersist }
         - { name: doctrine.event_listener, event: preUpdate }

    app.listener.song_thumb:
        class: AppBundle\Listener\CreateSongThumbOnPersist
        arguments:
            - @app.title_provider
        tags:
         - { name: doctrine.event_listener, event: prePersist }
         - { name: doctrine.event_listener, event: preUpdate }

    app.guzzle_client.youtube:
        class: Guzzle\Http\Client
